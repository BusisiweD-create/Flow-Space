"""add_definition_of_done_column

Revision ID: ce7c48d9cae4
Revises: f7a2740971b9
Create Date: 2025-10-03 23:41:00.045924

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ce7c48d9cae4'
down_revision: Union[str, None] = 'f7a2740971b9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('audit_logs', sa.Column('user_id', sa.Integer(), nullable=True))
    op.add_column('audit_logs', sa.Column('user_email', sa.String(length=255), nullable=True))
    op.add_column('audit_logs', sa.Column('user_role', sa.String(length=100), nullable=True))
    op.add_column('audit_logs', sa.Column('session_id', sa.String(length=500), nullable=True))
    op.add_column('audit_logs', sa.Column('ip_address', sa.String(length=50), nullable=True))
    op.add_column('audit_logs', sa.Column('user_agent', sa.String(length=500), nullable=True))
    op.add_column('audit_logs', sa.Column('action_category', sa.String(length=100), nullable=True))
    op.add_column('audit_logs', sa.Column('entity_name', sa.String(length=255), nullable=True))
    op.add_column('audit_logs', sa.Column('old_values', sa.JSON(), nullable=True))
    op.add_column('audit_logs', sa.Column('new_values', sa.JSON(), nullable=True))
    op.add_column('audit_logs', sa.Column('changed_fields', sa.JSON(), nullable=True))
    op.add_column('audit_logs', sa.Column('request_id', sa.String(length=500), nullable=True))
    op.add_column('audit_logs', sa.Column('endpoint', sa.String(length=500), nullable=True))
    op.add_column('audit_logs', sa.Column('http_method', sa.String(length=10), nullable=True))
    op.add_column('audit_logs', sa.Column('status_code', sa.Integer(), nullable=True))
    op.add_column('audit_logs', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.alter_column('audit_logs', 'action',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('audit_logs', 'entity_type',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('audit_logs', 'entity_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_foreign_key(None, 'audit_logs', 'users', ['user_id'], ['id'])
    op.drop_column('audit_logs', 'timestamp')
    op.drop_column('audit_logs', 'user')
    op.drop_column('audit_logs', 'details')
    op.add_column('deliverables', sa.Column('definition_of_done', sa.Text(), nullable=True))
    op.add_column('deliverables', sa.Column('priority', sa.String(length=50), nullable=True))
    op.add_column('deliverables', sa.Column('due_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('deliverables', sa.Column('created_by', sa.String(length=255), nullable=True))
    op.add_column('deliverables', sa.Column('assigned_to', sa.String(length=255), nullable=True))
    op.add_column('deliverables', sa.Column('evidence_links', sa.JSON(), nullable=True))
    op.add_column('deliverables', sa.Column('demo_link', sa.String(length=500), nullable=True))
    op.add_column('deliverables', sa.Column('repo_link', sa.String(length=500), nullable=True))
    op.add_column('deliverables', sa.Column('test_summary_link', sa.String(length=500), nullable=True))
    op.add_column('deliverables', sa.Column('user_guide_link', sa.String(length=500), nullable=True))
    op.add_column('deliverables', sa.Column('test_pass_rate', sa.Integer(), nullable=True))
    op.add_column('deliverables', sa.Column('code_coverage', sa.Integer(), nullable=True))
    op.add_column('deliverables', sa.Column('escaped_defects', sa.Integer(), nullable=True))
    op.add_column('deliverables', sa.Column('defect_severity_mix', sa.JSON(), nullable=True))
    op.add_column('deliverables', sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('deliverables', sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True))
    op.drop_constraint(None, 'deliverables', type_='foreignkey')
    op.drop_column('deliverables', 'sprint_id')
    op.add_column('signoffs', sa.Column('entity_type', sa.String(length=50), nullable=False))
    op.add_column('signoffs', sa.Column('entity_id', sa.Integer(), nullable=False))
    op.add_column('signoffs', sa.Column('signer_role', sa.String(length=100), nullable=True))
    op.add_column('signoffs', sa.Column('signer_company', sa.String(length=255), nullable=True))
    op.add_column('signoffs', sa.Column('decision', sa.String(length=50), nullable=True))
    op.add_column('signoffs', sa.Column('change_request_details', sa.Text(), nullable=True))
    op.add_column('signoffs', sa.Column('ip_address', sa.String(length=50), nullable=True))
    op.add_column('signoffs', sa.Column('user_agent', sa.String(length=500), nullable=True))
    op.add_column('signoffs', sa.Column('signature_hash', sa.String(length=500), nullable=True))
    op.add_column('signoffs', sa.Column('submitted_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.add_column('signoffs', sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('signoffs', sa.Column('responded_at', sa.DateTime(timezone=True), nullable=True))
    op.drop_constraint(None, 'signoffs', type_='foreignkey')
    op.drop_column('signoffs', 'is_approved')
    op.drop_column('signoffs', 'sprint_id')
    op.drop_column('signoffs', 'signed_at')
    op.add_column('sprints', sa.Column('planned_points', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('committed_points', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('completed_points', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('carried_over_points', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('added_during_sprint', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('removed_during_sprint', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('test_pass_rate', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('code_coverage', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('escaped_defects', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('defects_opened', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('defects_closed', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('defect_severity_mix', sa.JSON(), nullable=True))
    op.add_column('sprints', sa.Column('code_review_completion', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('documentation_status', sa.String(length=50), nullable=True))
    op.add_column('sprints', sa.Column('uat_notes', sa.Text(), nullable=True))
    op.add_column('sprints', sa.Column('uat_pass_rate', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('risks_identified', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('risks_mitigated', sa.Integer(), nullable=True))
    op.add_column('sprints', sa.Column('blockers', sa.Text(), nullable=True))
    op.add_column('sprints', sa.Column('decisions', sa.Text(), nullable=True))
    op.add_column('sprints', sa.Column('created_by', sa.String(length=255), nullable=True))
    op.add_column('sprints', sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('user_profiles', 'user_id',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Integer(),
               nullable=True)
    op.alter_column('user_profiles', 'first_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('user_profiles', 'last_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('user_profiles', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('user_profiles', 'bio',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('user_profiles', 'date_of_birth',
               existing_type=sa.DATETIME(),
               type_=sa.Date(),
               existing_nullable=True)
    op.create_index(op.f('ix_user_profiles_email'), 'user_profiles', ['email'], unique=True)
    op.create_index(op.f('ix_user_profiles_first_name'), 'user_profiles', ['first_name'], unique=False)
    op.create_index(op.f('ix_user_profiles_last_name'), 'user_profiles', ['last_name'], unique=False)
    op.create_foreign_key(None, 'user_profiles', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_profiles', type_='foreignkey')
    op.drop_index(op.f('ix_user_profiles_last_name'), table_name='user_profiles')
    op.drop_index(op.f('ix_user_profiles_first_name'), table_name='user_profiles')
    op.drop_index(op.f('ix_user_profiles_email'), table_name='user_profiles')
    op.alter_column('user_profiles', 'date_of_birth',
               existing_type=sa.Date(),
               type_=sa.DATETIME(),
               existing_nullable=True)
    op.alter_column('user_profiles', 'bio',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('user_profiles', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('user_profiles', 'last_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('user_profiles', 'first_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('user_profiles', 'user_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('sprints', 'reviewed_at')
    op.drop_column('sprints', 'created_by')
    op.drop_column('sprints', 'decisions')
    op.drop_column('sprints', 'blockers')
    op.drop_column('sprints', 'risks_mitigated')
    op.drop_column('sprints', 'risks_identified')
    op.drop_column('sprints', 'uat_pass_rate')
    op.drop_column('sprints', 'uat_notes')
    op.drop_column('sprints', 'documentation_status')
    op.drop_column('sprints', 'code_review_completion')
    op.drop_column('sprints', 'defect_severity_mix')
    op.drop_column('sprints', 'defects_closed')
    op.drop_column('sprints', 'defects_opened')
    op.drop_column('sprints', 'escaped_defects')
    op.drop_column('sprints', 'code_coverage')
    op.drop_column('sprints', 'test_pass_rate')
    op.drop_column('sprints', 'removed_during_sprint')
    op.drop_column('sprints', 'added_during_sprint')
    op.drop_column('sprints', 'carried_over_points')
    op.drop_column('sprints', 'completed_points')
    op.drop_column('sprints', 'committed_points')
    op.drop_column('sprints', 'planned_points')
    op.add_column('signoffs', sa.Column('signed_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.add_column('signoffs', sa.Column('sprint_id', sa.INTEGER(), nullable=True))
    op.add_column('signoffs', sa.Column('is_approved', sa.BOOLEAN(), nullable=True))
    op.create_foreign_key(None, 'signoffs', 'sprints', ['sprint_id'], ['id'])
    op.drop_column('signoffs', 'responded_at')
    op.drop_column('signoffs', 'reviewed_at')
    op.drop_column('signoffs', 'submitted_at')
    op.drop_column('signoffs', 'signature_hash')
    op.drop_column('signoffs', 'user_agent')
    op.drop_column('signoffs', 'ip_address')
    op.drop_column('signoffs', 'change_request_details')
    op.drop_column('signoffs', 'decision')
    op.drop_column('signoffs', 'signer_company')
    op.drop_column('signoffs', 'signer_role')
    op.drop_column('signoffs', 'entity_id')
    op.drop_column('signoffs', 'entity_type')
    op.add_column('deliverables', sa.Column('sprint_id', sa.INTEGER(), nullable=True))
    op.create_foreign_key(None, 'deliverables', 'sprints', ['sprint_id'], ['id'])
    op.drop_column('deliverables', 'approved_at')
    op.drop_column('deliverables', 'submitted_at')
    op.drop_column('deliverables', 'defect_severity_mix')
    op.drop_column('deliverables', 'escaped_defects')
    op.drop_column('deliverables', 'code_coverage')
    op.drop_column('deliverables', 'test_pass_rate')
    op.drop_column('deliverables', 'user_guide_link')
    op.drop_column('deliverables', 'test_summary_link')
    op.drop_column('deliverables', 'repo_link')
    op.drop_column('deliverables', 'demo_link')
    op.drop_column('deliverables', 'evidence_links')
    op.drop_column('deliverables', 'assigned_to')
    op.drop_column('deliverables', 'created_by')
    op.drop_column('deliverables', 'due_date')
    op.drop_column('deliverables', 'priority')
    op.drop_column('deliverables', 'definition_of_done')
    op.add_column('audit_logs', sa.Column('details', sa.TEXT(), nullable=True))
    op.add_column('audit_logs', sa.Column('user', sa.VARCHAR(length=255), nullable=True))
    op.add_column('audit_logs', sa.Column('timestamp', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.drop_constraint(None, 'audit_logs', type_='foreignkey')
    op.alter_column('audit_logs', 'entity_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('audit_logs', 'entity_type',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('audit_logs', 'action',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('audit_logs', 'created_at')
    op.drop_column('audit_logs', 'status_code')
    op.drop_column('audit_logs', 'http_method')
    op.drop_column('audit_logs', 'endpoint')
    op.drop_column('audit_logs', 'request_id')
    op.drop_column('audit_logs', 'changed_fields')
    op.drop_column('audit_logs', 'new_values')
    op.drop_column('audit_logs', 'old_values')
    op.drop_column('audit_logs', 'entity_name')
    op.drop_column('audit_logs', 'action_category')
    op.drop_column('audit_logs', 'user_agent')
    op.drop_column('audit_logs', 'ip_address')
    op.drop_column('audit_logs', 'session_id')
    op.drop_column('audit_logs', 'user_role')
    op.drop_column('audit_logs', 'user_email')
    op.drop_column('audit_logs', 'user_id')
    # ### end Alembic commands ###
